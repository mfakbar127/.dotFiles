# set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",tmux-256color:Tc"

# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"
# Default terminal is 256 colors
set -g default-terminal "screen-256color"


# set -g terminal-overrides ',xterm-256color:Tc,st-256color:Tc,xterm-termite:Tc,xterm-256color-italic:Tc'
# set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",tmux-256color:Tc"
# set-option -ga terminal-overrides ",st-256color:Tc"
# ######################
# ### DESIGN CHANGES ###
# ######################

# set-window-option -g mode-keys vi

# # panes
# set -g pane-border-fg black
# set -g pane-active-border-fg brightred

# ## Status bar design
# # status line
# set -g status-justify left
# set -g status-bg default
# set -g status-fg colour12
# set -g status-interval 2

# # messaging
# set -g message-fg black
# set -g message-bg yellow
# set -g message-command-fg blue
# set -g message-command-bg black

# #window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour0

# # window status
# setw -g window-status-format " #F#I:#W#F "
# setw -g window-status-current-format " #F#I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# setw -g window-status-current-bg colour0
# setw -g window-status-current-fg colour11
# setw -g window-status-current-attr dim
# setw -g window-status-bg green
# setw -g window-status-fg black
# setw -g window-status-attr reverse

# # Info on left (I don't have a session display for now)
# set -g status-left ''

# # loud or quiet?
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-option -g visual-silence off
# set-window-option -g monitor-activity off
# set-option -g bell-action none

# set -g default-terminal "screen-256color"

# # The modes {
# setw -g clock-mode-colour colour135
# setw -g mode-attr bold
# setw -g mode-fg colour196
# setw -g mode-bg colour238

# # }
# # The panes {

# set -g pane-border-bg colour235
# set -g pane-border-fg colour238
# set -g pane-active-border-bg colour236
# set -g pane-active-border-fg colour51

# # }
# # The statusbar {

# set -g status-position bottom
# set -g status-bg colour234
# set -g status-fg colour137
# set -g status-attr dim
# set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right-length 50
# set -g status-left-length 20

# setw -g window-status-current-fg colour81
# setw -g window-status-current-bg colour238
# setw -g window-status-current-attr bold
# setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

# setw -g window-status-fg colour138
# setw -g window-status-bg colour235
# setw -g window-status-attr none
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# setw -g window-status-bell-attr bold
# setw -g window-status-bell-fg colour255
# setw -g window-status-bell-bg colour1

# # }
# # The messages {

# set -g message-attr bold
# set -g message-fg colour232
# set -g message-bg colour166

# # }

### END DESIGN CHANGES ###


# -- display -------------------------------------------------------------------

# set -g base-index 1         # start windows numbering at 1
# setw -g pane-base-index 1   # make pane numbering consistent with windows

# setw -g automatic-rename on # rename window to reflect current program
# set -g renumber-windows on  # renumber windows when a window is closed

# set -g set-titles on                        # set terminal title
# set -g set-titles-string '#h ❐ #S ● #I #W'

# set -g display-panes-time 800 # slightly longer pane indicators display time
# set -g display-time 1000      # slightly longer status messages display time

# set -g status-interval 10     # redraw status line every 10 seconds

# # clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


############ KEY CONFIGURATION ################

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-s
bind-key C-s send-prefix


# window navigation
unbind n
unbind p
bind -n M-s previous-window # select previous window
bind -n M-d next-window     # select next window
unbind [
bind [ previous-window # select previous window
bind ] next-window     # select next window


### BEGIN PANES ###

# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind | split-window -h -c "#{pane_current_path}"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# switch panes using Alt-arrow without prefix

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

### END PANES ###

### COPY MODE ###

bind Enter copy-mode # enter copy mode

setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


# bind y run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


# run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
# bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "pbcopy"
# run -b 'tmux bind -t vi-copy c copy-pipe "pbcopy"'
# bind-key -t vi-copy 'y' copy-pipe "pbcopy"
# run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
# run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
# run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind -T copy-mode-vi c copy-pipe-and-cancel "xclip -sel clip -i"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
### COPY MODE ###

############### END KEY CONFIGURATION ################


#source-file "${HOME}/.tmux-themepack/powerline/default/cyan.tmuxtheme"
# source-file "${HOME}/.tmux-themepack/basic.tmuxtheme"
# run-shell "~/.tmux/themes/nord-tmux/nord.tmux"
#run-shell "powerline-config tmux setup"
# run-shell "~/.tmux/themes/tmux-onedark-theme/tmux-onedark-theme.tmux"
#run-shell ~/.tmux/plugins/tmux-nova/nova.tmux

run -b '~/.tmux/plugins/tpm/tpm'

# set -g @plugin 'dracula/tmux'
# set -g @dracula-show-weather false
# set -g @dracula-show-powerline true
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-cpu'

# themes
#set -g @plugin 'wfxr/tmux-power'
set -g @tmux_power_theme 'snow'
run-shell "~/.tmux/plugins/tmux-power/tmux-power.tmux"


# ENABLE MOUSE
set -g mouse on

# Set pane title
# set -g pane-border-format "#{pane_index} #T"



# nova themes
#set -g @plugin 'o0th/tmux-nova'

#set -g @nova-nerdfonts true
#set -g @nova-nerdfonts-left 
#set -g @nova-nerdfonts-right 

#set -g @nova-segment-mode "#{?client_prefix,Ω,ω}"
#set -g @nova-segment-mode-colors "#50fa7b #282a36"

#set -g @nova-segment-whoami "#(whoami)@#h"
#set -g @nova-segment-whoami-colors "#50fa7b #282a36"

#set -g @nova-pane "#I#{?pane_in_mode,  #{pane_mode},}  #W"

#set -g @nova-rows 1
#set -g @nova-segments-0-left "mode"
